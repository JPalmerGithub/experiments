# This is a playbook to deploy a minecraft server.
# 
# We provide mark2, a simple minecraft server wrapper, which provides a simple
# terminal-based interface. We also set up an init-script to ensure the server
# properly starts and stops for system restarts.
#
# Notes:
# - You may wish to edit the server configuration in
#   files/default-server/server.properties. Note that by default it uses a
#   white-list, and ops.txt is empty!
# - We configure the server to use 75% of the system's memory. See
#   files/mark2.properties.j2.
# - Check configuration options in minecraft-vars.yml.
#
# Thu Jan  2 16:50:41 EST 2014
---

- hosts: vagrant
  vars_files:
    - minecraft-vars.yml
  remote_user: vagrant
  sudo: yes
  tasks:

    # System setup
    - name: update package list
      apt: update_cache=yes cache_valid_time=3600
    # mark2 doesn't work without a UTF-8 locale. Just set it everywhere.
    - name: set UTF-8 locale
      lineinfile: dest="/etc/default/locale" regexp="^{{item}}=.*" line="{{item}}=en_US.UTF-8" state=present
      with_items:
        - "LC_ALL"
        - "LANG"

    - name: install packages
      apt: pkg="{{item}}" state=latest
      with_items:
        # minecraft server
        - default-jre-headless
        # so we can clone the mark2 repo
        - git
        # deps for pip (for mark2)
        - python-dev
        - python-pip

    # Set up minecraft user.
    # TODO: Set up SSH keys for this user.
    - name: add minecraft user
      user: name="{{minecraft_user}}" shell=/bin/bash home="{{minecraft_home}}"

    # Copy minecraft server and configs. This does not clobber any files that
    # already exist on the remote machine.
    - name: copy minecraft server configuration
      copy: src="{{minecraft_server_dir}}/" dest="{{minecraft_home}}/{{minecraft_server_name}}" force=no owner="{{minecraft_user}}" group="{{minecraft_user}}"
      notify:
        - restart minecraft
    # I don't understand why we need this when we set user and group on the
    # 'copy' command above, but ansible doesn't set permissions on
    # sub-directories.
    - name: chmod minecraft configuration
      file: path="{{minecraft_home}}/{{minecraft_server_name}}" state=directory recurse=yes owner="{{minecraft_user}}" group="{{minecraft_user}}"


    - name: download minecraft server
      get_url: url="http://s3.amazonaws.com/Minecraft.Download/versions/{{minecraft_version}}/minecraft_server.{{minecraft_version}}.jar" dest="{{minecraft_home}}/{{minecraft_server_name}}/"

    # Install mark2
    - name: download mark2
      git: repo=https://github.com/mcdevs/mark2.git dest=~/mark2
    - name: install mark2 requirements
      pip: requirements=~/mark2/requirements.txt
    - name: install mark2
      command: chdir=~/mark2/ creates=/usr/local/bin/mark2 python ./setup.py install
    - name: copy mark2 config 
      template: src="./files/mark2.properties.j2" dest="/etc/mark2/mark2.properties" mode=0644
    - name: install init script
      template: src="./files/etc_init.d_minecraft-mark2"  dest="/etc/init.d/minecraft_{{minecraft_server_name}}" mode=0755


    # Start it up!
    - name: install/start init script
      service: name="minecraft_{{minecraft_server_name}}" enabled=yes state=started

  handlers:
    - name: restart minecraft
      service: name="minecraft_{{minecraft_server_name}}" state=restarted
